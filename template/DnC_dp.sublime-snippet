<snippet>
	<content><![CDATA[
//  https://codeforces.com/blog/entry/8219
//  dp[i][j] = min( dp[i-1][k] + c[k][j] ) for k<j;     a[i][j] <= a[i][j+1]

ll dp[N][N];    // dp[i][j] = i partition upto j index
// only (K-1) & K leval used, so reduce it dp[2][N] if needed.

ll cost(int i,int j)
{
    return a[j][j]-a[i-1][j]-a[j][i-1]+a[i-1][i-1];
}

void sol(int k,int l,int r,int opl,int opr)
{
    if(l>r) return ;

    int md=(l+r)/2,opmd=-1;

    for(int i=opl;i<=min(md,opr);i++)
        if(dp[k-1][i-1]+cost(i,md)<dp[k][md])
            dp[k][md]=dp[k-1][i-1]+cost(i,md),opmd=i;

    sol(k,l,md-1,opl,opmd);
    sol(k,md+1,r,opmd,opr);
}

void DnC_dp()
{
    for(int i=0;i<N;i++)
        for(int j=0;j<N;j++)
            dp[i][j]=inf;
    dp[0][0]=0;

        for(int i=1;i<=K;i++)
            sol(i,i,n,1,n);
}




]]></content>
	<!-- Optional: Set a tabTrigger to define how to trigger the snippet -->
	<tabTrigger>DnC_dp</tabTrigger>
	<!-- Optional: Set a scope to limit where the snippet will trigger -->
	<scope>source.c++</scope>
</snippet>
